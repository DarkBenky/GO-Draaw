package main

const screenWidth = 800
const screenHeight = 600

// Bayer matrix for ordered dithering (4x4)
var BayerMatrix [16]float
var Alpha float

func Fragment(position vec4, texCoord vec2, color vec4) vec4 {
    // Retrieve the pixel color from the texture
    c := imageSrc0At(texCoord)

    // Scale RGB values to [0, 255]
    r := c.r
    g := c.g
    b := c.b

    // Calculate the index for the flattened Bayer matrix
    x := int(mod(texCoord.x * screenWidth, 4))
    y := int(mod(texCoord.y * screenHeight, 4))
    bayerValue := BayerMatrix[y*4+x] // Access the correct Bayer value

    // Apply Bayer matrix dithering to each color channel
    if r > bayerValue {
        r = 1.0 * Alpha
    } else {
        r = 0.0
    }

    if g > bayerValue {
        g = 1.0 * Alpha
    } else {
        g = 0.0
    }

    if b > bayerValue {
        b = 1.0 * Alpha
    } else {
        b = 0.0
    }

    if r == 0.0 && g == 0.0 && b == 0.0 {
        return vec4(0.0, 0.0, 0.0, 0.0) // Return transparent black
    }

    return vec4(r, g, b, Alpha) // Return the dithered color
}